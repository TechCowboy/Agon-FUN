PC     Output            Line Source
040000                   0001 
040000                   0002 
040000                   0003     .org $00000
000000                   0004 
000000                   0005     .assume adl=0
000000                   0006 
000000                   0007 ; Start in mixed mode. Assumes MBASE is set to correct segment
000000                   0008 ;
000000 C3 44 01          0009     jp	start				; Jump to start
000003 00 00 00 00 00    0010     ds	5
000008                   0011 
000008                   0012 rst_08:
000008 49                0013     .db 0x49
000009 CF                0014     rst 08h				; API call
00000A C9                0015     ret
00000B 00 00 00 00 00    0016     ds 	5
000010                   0017 
000010                   0018 rst_10:
000010 49                0019     .db 0x49
000011 D7                0020     rst 10h				; Output
000012 C9                0021     ret
000013 00 00 00 00 00    0022     ds	5
000018                   0023 
000018                   0024 rst_18:
000018 49                0025     .db 0x49
000019 DF                0026     rst	18h				; Block Output
00001A C9                0027     ret
00001B 00 00 00 00 00    0028     ds	5
000020                   0029 
000020                   0030 rst_20:
000020 00 00 00 00 00 00 0031     ds	8
       00 00             
000028                   0032 
000028                   0033 rst_28:
000028 00 00 00 00 00 00 0034     ds	8
       00 00             
000030                   0035 
000030                   0036 rst_30:
000030 00 00 00 00 00 00 0037     ds	8
       00 00             
000038                   0038 
000038                   0039 ;
000038                   0040 ; The NMI interrupt vector (not currently used by AGON)
000038                   0041 ;
000038                   0042 
000038                   0043 rst_38:
000038 FB                0044     ei
000039 ED 4D             0045     reti
00003B                   0046 ;
00003B                   0047 ; The header stuff is from byte 64 onwards
00003B                   0048 ;
00003B FF FF FF FF FF    0049     align	64
000040                   0050 
000040 4D 4F 53          0051     db	"MOS"			; Flag for MOS - to confirm this is a valid MOS command
000043 00                0052     db	0x00			; MOS header version 0
000044 00                0053     db	0x00			; Flag for run mode (0: Z80, 1: ADL)
000045                   0054 
000045                   0055 _exec_name:
000045 00 00 00 00 00 00 0056     ds	0xff	    	; The executable name, only used in argv
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00          
000144                   0057 
000144                   0058 ;
000144                   0059 ; And the code follows on immediately after the header
000144                   0060 ;
000144                   0061 
000144                   0062 start:
000144                   0063 
000144                   0064     ; Found out from the BBC code that you
000144                   0065     ; need to preserve the registers in ADL form
000144                   0066     ; I've written this so it works with
000144                   0067     ; assemblers that only know z80 opcodes
000144                   0068 
000144                   0069     ; save the registers
000144                   0070 
000144 5B                0071     .db 0x5b        ; lil prefix
000145 DD E5             0072     push ix
000147                   0073 
000147 5B                0074     .db 0x5b        ; lil prefix
000148 FD E5             0075     push iy		    ; Preserve IY
00014A                   0076 
00014A 5B                0077     .db 0x5b        ; lil prefix
00014B F5                0078     push af	    	; Preserve the rest of the registers
00014C                   0079 
00014C 5B                0080     .db 0x5b        ; lil prefix
00014D C5                0081     push bc
00014E                   0082 
00014E 5B                0083     .db 0x5b        ; lil prefix
00014F D5                0084     push de
000150                   0085 
000150                   0086     ; ***********************
000150                   0087     ; the z80 application
000150                   0088     ; ***********************
000150                   0089 
000150 21 6E 01          0090     ld hl,hello_str
000153 01 00 00          0091     ld bc, 0
000156 3E 00             0092     ld a,0
000158 DF                0093     rst 0x18        ; print string
000159                   0094 
000159 3E 00             0095     ld a,0
00015B CF                0096     rst 0x08        ; get a character
00015C                   0097 
00015C                   0098     ; ***********************
00015C                   0099     ; end z80 application
00015C                   0100     ; ***********************
00015C                   0101 
00015C                   0102     ; Restore the registers
00015C                   0103 
00015C 5B                0104     .db 0x5b        ; lil prefix
00015D D1                0105     pop de
00015E                   0106 
00015E 5B                0107     .db 0x5b        ; lil prefix
00015F C1                0108     pop bc
000160                   0109 
000160 5B                0110     .db 0x5b        ; lil prefix
000161 F1                0111     pop af
000162                   0112 
000162 5B                0113     .db 0x5b        ; lil prefix
000163 FD E1             0114     pop iy	    	; Get the preserved SPS
000165                   0115 
000165 5B                0116     .db 0x5b        ; lil prefix
000166 DD E1             0117     pop ix
000168                   0118 
000168 49                0119     .db 0x49        ; lis prefix
000169 21 00 00          0120     ld hl, 0
00016C                   0121 
00016C 49                0122     .db 0x49        ; lis prefix
00016D C9                0123     ret 			; Return to MOS
00016E                   0124 
00016E                   0125 hello_str:
00016E 48 65 6C 6C 6F 2C 0126     db "Hello, World!\r\nPress any key to continue\r\n",0
       20 57 6F 72 6C 64 
       21 0D 0A 50 72 65 
       73 73 20 61 6E 79 
       20 6B 65 79 20 74 
       6F 20 63 6F 6E 74 
       69 6E 75 65 0D 0A 
       00                
