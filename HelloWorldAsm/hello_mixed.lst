PC     Output            Line Source
040000                   0001 
040000                   0002 
040000                   0003     .org $00000
000000                   0004 
000000                   0005     .assume adl=0
000000                   0006 
000000                   0007 ; Start in mixed mode. Assumes MBASE is set to correct segment
000000                   0008 ;
000000 C3 44 01          0009     jp	start				; Jump to start
000003 00 00 00 00 00    0010     ds	5
000008                   0011 
000008                   0012 rst_08:
000008 49                0013     .db 0x49
000009 CF                0014     rst 08h				; API call
00000A C9                0015     ret
00000B 00 00 00 00 00    0016     ds 	5
000010                   0017 
000010                   0018 rst_10:
000010 49                0019     .db 0x49
000011 D7                0020     rst 10h				; Output
000012 C9                0021     ret
000013 00 00 00 00 00    0022     ds	5
000018                   0023 
000018                   0024 rst_18:
000018 49                0025     .db 0x49
000019 DF                0026     rst	18h				; Block Output
00001A C9                0027     ret
00001B 00 00 00 00 00    0028     ds	5
000020                   0029 
000020                   0030 rst_20:
000020 00 00 00 00 00 00 0031     ds	8
       00 00             
000028                   0032 
000028                   0033 rst_28:
000028 00 00 00 00 00 00 0034     ds	8
       00 00             
000030                   0035 
000030                   0036 rst_30:
000030 00 00 00 00 00 00 0037     ds	8
       00 00             
000038                   0038 
000038                   0039 ;
000038                   0040 ; The NMI interrupt vector (not currently used by AGON)
000038                   0041 ;
000038                   0042 
000038                   0043 rst_38:
000038 FB                0044     ei
000039 ED 4D             0045     reti
00003B                   0046 ;
00003B                   0047 ; The header stuff is from byte 64 onwards
00003B                   0048 ;
00003B FF FF FF FF FF    0049     align	64
000040                   0050 
000040 4D 4F 53          0051     db	"MOS"			; Flag for MOS - to confirm this is a valid MOS command
000043 00                0052     db	0x00			; MOS header version 0
000044 00                0053     db	0x00			; Flag for run mode (0: Z80, 1: ADL)
000045                   0054 
000045                   0055 _exec_name:
000045 00 00 00 00 00 00 0056     ds	0xff	    	; The executable name, only used in argv
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00          
000144                   0057 
000144                   0058 ;
000144                   0059 ; And the code follows on immediately after the header
000144                   0060 ;
000144                   0061 
000144                   0062 start:
000144                   0063 
000144                   0064     ; Found out from the BBC code that you
000144                   0065     ; need to preserve the registers in ADL form
000144                   0066     ; I've written this so it works with
000144                   0067     ; assemblers that only know z80 opcodes
000144                   0068 
000144                   0069     ; save the registers
000144                   0070 
000144 5B DD E5          0071     push.lil ix
000147 5B FD E5          0072     push.lil iy
00014A 5B F5             0073     push.lil af
00014C 5B C5             0074     push.lil bc
00014E 5B D5             0075     push.lil de
000150                   0076 
000150                   0077     ; ***********************
000150                   0078     ; the z80 application
000150                   0079     ; ***********************
000150                   0080 
000150 21 6F 01          0081     ld hl,hello_str
000153 01 00 00          0082     ld bc, 0
000156 3E 00             0083     ld a,0
000158 DF                0084     rst 0x18        ; print string
000159                   0085 
000159 3E 00             0086     ld a,0
00015B CF                0087     rst 0x08        ; get a character
00015C                   0088 
00015C                   0089     ; ***********************
00015C                   0090     ; end z80 application
00015C                   0091     ; ***********************
00015C                   0092 
00015C                   0093     ; Restore the registers
00015C                   0094 
00015C 5B D1             0095     pop.lil de
00015E 5B C1             0096     pop.lil bc
000160 5B F1             0097     pop.lil af
000162 5B FD E1          0098     pop.lil iy	    	; Get the preserved SPS
000165 5B DD E1          0099     pop.lil ix
000168                   0100 
000168 5B 21 00 00 00    0101     ld.lil hl, 0        ; return code to MOS
00016D                   0102 
00016D 49 C9             0103     ret.l 			    ; Return to MOS
00016F                   0104 
00016F                   0105 hello_str:
00016F 48 65 6C 6C 6F 2C 0106     db "Hello, World!\r\nPress any key to continue\r\n",0
       20 57 6F 72 6C 64 
       21 0D 0A 50 72 65 
       73 73 20 61 6E 79 
       20 6B 65 79 20 74 
       6F 20 63 6F 6E 74 
       69 6E 75 65 0D 0A 
       00                
00019A                   0107 
00019A                   0108 
00019A                   0109 
